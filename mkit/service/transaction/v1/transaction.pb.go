// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mkit/service/transaction/v1/transaction.proto

package transactionv1

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReadRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a953571ec939c611, []int{0}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type ReadResponse struct {
	Key                  string            `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Event                *TransactionEvent `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a953571ec939c611, []int{1}
}

func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (m *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(m, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ReadResponse) GetEvent() *TransactionEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

type WriteRequest struct {
	Key                  string            `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Event                *TransactionEvent `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a953571ec939c611, []int{2}
}

func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (m *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(m, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

func (m *WriteRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *WriteRequest) GetEvent() *TransactionEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

// Transaction Event
type TransactionEvent struct {
	// request
	Req []byte `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	// responce
	Rsp                  []byte   `protobuf:"bytes,2,opt,name=rsp,proto3" json:"rsp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionEvent) Reset()         { *m = TransactionEvent{} }
func (m *TransactionEvent) String() string { return proto.CompactTextString(m) }
func (*TransactionEvent) ProtoMessage()    {}
func (*TransactionEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_a953571ec939c611, []int{3}
}

func (m *TransactionEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionEvent.Unmarshal(m, b)
}
func (m *TransactionEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionEvent.Marshal(b, m, deterministic)
}
func (m *TransactionEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionEvent.Merge(m, src)
}
func (m *TransactionEvent) XXX_Size() int {
	return xxx_messageInfo_TransactionEvent.Size(m)
}
func (m *TransactionEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionEvent proto.InternalMessageInfo

func (m *TransactionEvent) GetReq() []byte {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *TransactionEvent) GetRsp() []byte {
	if m != nil {
		return m.Rsp
	}
	return nil
}

func init() {
	proto.RegisterType((*ReadRequest)(nil), "mkit.service.transaction.v1.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "mkit.service.transaction.v1.ReadResponse")
	proto.RegisterType((*WriteRequest)(nil), "mkit.service.transaction.v1.WriteRequest")
	proto.RegisterType((*TransactionEvent)(nil), "mkit.service.transaction.v1.TransactionEvent")
}

func init() {
	proto.RegisterFile("mkit/service/transaction/v1/transaction.proto", fileDescriptor_a953571ec939c611)
}

var fileDescriptor_a953571ec939c611 = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0x4f, 0x4b, 0xfb, 0x30,
	0x18, 0x26, 0xbf, 0xfd, 0x26, 0x98, 0x55, 0x18, 0x39, 0x68, 0xe9, 0x0e, 0x8e, 0x9e, 0x2a, 0xb2,
	0x84, 0x4e, 0xf0, 0xe0, 0x71, 0xb2, 0x8b, 0x27, 0xa9, 0x82, 0xa0, 0xa7, 0xae, 0x7d, 0x1d, 0x75,
	0x5b, 0xd3, 0x25, 0x59, 0x60, 0x1f, 0xce, 0xef, 0xe5, 0x51, 0x92, 0x6c, 0x18, 0x15, 0x8b, 0x07,
	0x6f, 0xef, 0x9f, 0xe7, 0x79, 0x9f, 0x97, 0x87, 0x07, 0x8f, 0x56, 0x8b, 0x4a, 0x31, 0x09, 0x42,
	0x57, 0x05, 0x30, 0x25, 0xf2, 0x5a, 0xe6, 0x85, 0xaa, 0x78, 0xcd, 0x74, 0xea, 0xb7, 0xb4, 0x11,
	0x5c, 0x71, 0x32, 0x30, 0x70, 0xba, 0x83, 0x53, 0x7f, 0xaf, 0xd3, 0x68, 0x30, 0xe7, 0x7c, 0xbe,
	0x04, 0x66, 0xa1, 0xb3, 0xcd, 0x33, 0x83, 0x55, 0xa3, 0xb6, 0x8e, 0x19, 0x9d, 0xe8, 0x7c, 0x59,
	0x95, 0xb9, 0x02, 0xb6, 0x2f, 0xdc, 0x22, 0x3e, 0xc5, 0xbd, 0x0c, 0xf2, 0x32, 0x83, 0xf5, 0x06,
	0xa4, 0x22, 0x7d, 0xdc, 0x59, 0xc0, 0x36, 0x44, 0x43, 0x94, 0x1c, 0x66, 0xa6, 0x8c, 0x5f, 0x70,
	0xe0, 0x00, 0xb2, 0xe1, 0xb5, 0x84, 0xef, 0x08, 0x72, 0x8d, 0xbb, 0xa0, 0xa1, 0x56, 0xe1, 0xbf,
	0x21, 0x4a, 0x7a, 0xe3, 0x11, 0x6d, 0xf9, 0x92, 0xde, 0x7f, 0xb4, 0x53, 0x43, 0xca, 0x1c, 0xf7,
	0xaa, 0xf3, 0x36, 0x41, 0x31, 0xe0, 0xe0, 0x41, 0x54, 0x0a, 0x7e, 0xfc, 0xe6, 0x4f, 0xb4, 0xe2,
	0x4b, 0xdc, 0xff, 0xba, 0x32, 0x52, 0x02, 0xd6, 0x56, 0x2a, 0xc8, 0x4c, 0x69, 0x27, 0xb2, 0xb1,
	0x42, 0x66, 0x22, 0x9b, 0xf1, 0x2b, 0xc2, 0xc4, 0x23, 0xde, 0x39, 0x55, 0xf2, 0x84, 0xff, 0x1b,
	0x87, 0x48, 0xd2, 0xfa, 0x8c, 0xe7, 0x72, 0x74, 0xf6, 0x0b, 0xe4, 0xce, 0xee, 0x1b, 0xdc, 0xb5,
	0x96, 0x90, 0x76, 0x8e, 0x6f, 0x5b, 0x74, 0x4c, 0x5d, 0x14, 0xe8, 0x3e, 0x0a, 0x74, 0x6a, 0xa2,
	0x30, 0x39, 0xc7, 0xe1, 0xa7, 0x1b, 0x02, 0x0a, 0x2e, 0x4a, 0x10, 0x54, 0xa7, 0xb7, 0xe8, 0xf1,
	0xc8, 0x3b, 0xa9, 0xd3, 0xd9, 0x81, 0x25, 0x5f, 0xbc, 0x07, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x2a,
	0x97, 0x67, 0xa3, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransactionServiceClient is the client API for TransactionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionServiceClient interface {
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
	Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type transactionServiceClient struct {
	cc *grpc.ClientConn
}

func NewTransactionServiceClient(cc *grpc.ClientConn) TransactionServiceClient {
	return &transactionServiceClient{cc}
}

func (c *transactionServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := c.cc.Invoke(ctx, "/mkit.service.transaction.v1.TransactionService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionServiceClient) Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/mkit.service.transaction.v1.TransactionService/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransactionServiceServer is the server API for TransactionService service.
type TransactionServiceServer interface {
	Read(context.Context, *ReadRequest) (*ReadResponse, error)
	Write(context.Context, *WriteRequest) (*empty.Empty, error)
}

// UnimplementedTransactionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTransactionServiceServer struct {
}

func (*UnimplementedTransactionServiceServer) Read(ctx context.Context, req *ReadRequest) (*ReadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedTransactionServiceServer) Write(ctx context.Context, req *WriteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Write not implemented")
}

func RegisterTransactionServiceServer(s *grpc.Server, srv TransactionServiceServer) {
	s.RegisterService(&_TransactionService_serviceDesc, srv)
}

func _TransactionService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mkit.service.transaction.v1.TransactionService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServiceServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionService_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServiceServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mkit.service.transaction.v1.TransactionService/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServiceServer).Write(ctx, req.(*WriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransactionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mkit.service.transaction.v1.TransactionService",
	HandlerType: (*TransactionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _TransactionService_Read_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _TransactionService_Write_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mkit/service/transaction/v1/transaction.proto",
}
